// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: giga_synth_controls

#ifndef _GIGA_SYNTH_CONTROLS_UI_H
#define _GIGA_SYNTH_CONTROLS_UI_H

#ifdef __cplusplus
extern "C" {
#endif

#if defined __has_include
#if __has_include("lvgl.h")
#include "lvgl.h"
#elif __has_include("lvgl/lvgl.h")
#include "lvgl/lvgl.h"
#else
#include "lvgl.h"
#endif
#else
#include "lvgl.h"
#endif

#include "ui_helpers.h"
#include "ui_events.h"
// SCREEN: ui_fm_screen
void ui_fm_screen_screen_init(void);
extern lv_obj_t * ui_fm_screen;
extern lv_obj_t * ui_fm_screen_tab;
extern lv_obj_t * ui_fm_screen_engine_page;
extern lv_obj_t * ui_fm_screen_fm_engine_button;
extern lv_obj_t * ui_fm_screen_fm_engine_button_label;
void ui_event_fm_screen_sampler_engine_button(lv_event_t * e);
extern lv_obj_t * ui_fm_screen_sampler_engine_button;
extern lv_obj_t * ui_fm_screen_sampler_engine_button_label;
void ui_event_fm_screen_additive_engine_button(lv_event_t * e);
extern lv_obj_t * ui_fm_screen_additive_engine_button;
extern lv_obj_t * ui_fm_screen_additive_engine_button_label;
void ui_event_fm_screen_subtractive_engine_button(lv_event_t * e);
extern lv_obj_t * ui_fm_screen_subtractive_engine_button;
extern lv_obj_t * ui_fm_screen_subtractive_engine_button_label;
extern lv_obj_t * ui_algorithm_page;
void ui_event_algorithm_roller(lv_event_t * e);
extern lv_obj_t * ui_algorithm_roller;
extern lv_obj_t * ui_algorithm_container;
extern lv_obj_t * ui_algorithm_bar_11;
extern lv_obj_t * ui_algorithm_bar_10;
extern lv_obj_t * ui_algorithm_bar_9;
extern lv_obj_t * ui_algorithm_bar_8;
extern lv_obj_t * ui_algorithm_bar_7;
extern lv_obj_t * ui_algorithm_bar_6;
extern lv_obj_t * ui_algorithm_bar_5;
extern lv_obj_t * ui_algorithm_bar_4;
extern lv_obj_t * ui_algorithm_bar_3;
extern lv_obj_t * ui_algorithm_bar_2;
extern lv_obj_t * ui_algorithm_bar_1;
extern lv_obj_t * ui_operator_1_button;
extern lv_obj_t * ui_operator_1_button_label;
extern lv_obj_t * ui_operator_2_button;
extern lv_obj_t * ui_operator_2_button_label;
extern lv_obj_t * ui_operator_3_button;
extern lv_obj_t * ui_operator_3_button_label;
extern lv_obj_t * ui_operator_4_button;
extern lv_obj_t * ui_operator_4_button_label;
extern lv_obj_t * ui_operator_5_button;
extern lv_obj_t * ui_operator_5_button_label;
extern lv_obj_t * ui_operator_6_button;
extern lv_obj_t * ui_operator_6_button_label;
extern lv_obj_t * ui_waveform_page;
void ui_event_sine_wave_button(lv_event_t * e);
extern lv_obj_t * ui_sine_wave_button;
extern lv_obj_t * ui_sine_wave_button_label;
void ui_event_square_wave_button(lv_event_t * e);
extern lv_obj_t * ui_square_wave_button;
extern lv_obj_t * ui_square_wave_button_label;
void ui_event_triangle_wave_button(lv_event_t * e);
extern lv_obj_t * ui_triangle_wave_button;
extern lv_obj_t * ui_triangle_wave_button_label;
void ui_event_sawtooth_wave_button(lv_event_t * e);
extern lv_obj_t * ui_sawtooth_wave_button;
extern lv_obj_t * ui_sawtooth_wave_button_label;
extern lv_obj_t * ui_adsr_page;
extern lv_obj_t * ui_adsr_labels_container;
extern lv_obj_t * ui_attack_label;
extern lv_obj_t * ui_decay_label;
extern lv_obj_t * ui_sustain_label;
extern lv_obj_t * ui_release_label;
extern lv_obj_t * ui_adsr_arcs_container;
void ui_event_attack_arc(lv_event_t * e);
extern lv_obj_t * ui_attack_arc;
void ui_event_decay_arc(lv_event_t * e);
extern lv_obj_t * ui_decay_arc;
void ui_event_sustain_arc(lv_event_t * e);
extern lv_obj_t * ui_sustain_arc;
void ui_event_release_arc(lv_event_t * e);
extern lv_obj_t * ui_release_arc;
extern lv_obj_t * ui_operators_page;
extern lv_obj_t * ui_operators_ratios_label;
extern lv_obj_t * ui_operators_ratios_arcs_container;
void ui_event_operator_1_ratio(lv_event_t * e);
extern lv_obj_t * ui_operator_1_ratio;
void ui_event_operator_2_ratio(lv_event_t * e);
extern lv_obj_t * ui_operator_2_ratio;
void ui_event_operator_3_ratio(lv_event_t * e);
extern lv_obj_t * ui_operator_3_ratio;
void ui_event_operator_4_ratio(lv_event_t * e);
extern lv_obj_t * ui_operator_4_ratio;
void ui_event_operator_5_ratio(lv_event_t * e);
extern lv_obj_t * ui_operator_5_ratio;
void ui_event_operator_6_ratio(lv_event_t * e);
extern lv_obj_t * ui_operator_6_ratio;
extern lv_obj_t * ui_operators_levels_label;
extern lv_obj_t * ui_operators_levels_arcs_container;
void ui_event_operator_1_level(lv_event_t * e);
extern lv_obj_t * ui_operator_1_level;
void ui_event_operator_2_level(lv_event_t * e);
extern lv_obj_t * ui_operator_2_level;
void ui_event_operator_3_level(lv_event_t * e);
extern lv_obj_t * ui_operator_3_level;
void ui_event_operator_4_level(lv_event_t * e);
extern lv_obj_t * ui_operator_4_level;
void ui_event_operator_5_level(lv_event_t * e);
extern lv_obj_t * ui_operator_5_level;
void ui_event_operator_6_level(lv_event_t * e);
extern lv_obj_t * ui_operator_6_level;
extern lv_obj_t * ui_operators_labels_container;
extern lv_obj_t * ui_operator_1_label;
extern lv_obj_t * ui_operator_2_label;
extern lv_obj_t * ui_operator_3_label;
extern lv_obj_t * ui_operator_4_label;
extern lv_obj_t * ui_operator_5_label;
extern lv_obj_t * ui_operator_6_label;
extern lv_obj_t * ui_io_page;
extern lv_obj_t * ui_io_labels_container;
extern lv_obj_t * ui_midi_label;
extern lv_obj_t * ui_io_controls_container;
void ui_event_midi_roller(lv_event_t * e);
extern lv_obj_t * ui_midi_roller;
// SCREEN: ui_sampler_screen
void ui_sampler_screen_screen_init(void);
extern lv_obj_t * ui_sampler_screen;
extern lv_obj_t * ui_sampler_screen_tab;
extern lv_obj_t * ui_sampler_screen_engine_page;
void ui_event_sampler_screen_fm_engine_button(lv_event_t * e);
extern lv_obj_t * ui_sampler_screen_fm_engine_button;
extern lv_obj_t * ui_sampler_screen_sampler_engine_button;
void ui_event_sampler_screen_additive_engine_button(lv_event_t * e);
extern lv_obj_t * ui_sampler_screen_additive_engine_button;
void ui_event_sampler_screen_subtractive_engine_button(lv_event_t * e);
extern lv_obj_t * ui_sampler_screen_subtractive_engine_button;
// SCREEN: ui_additive_screen
void ui_additive_screen_screen_init(void);
extern lv_obj_t * ui_additive_screen;
extern lv_obj_t * ui_addictive_screen_tab;
extern lv_obj_t * ui_addictive_screen_engine_page;
void ui_event_additive_screen_fm_engine_button(lv_event_t * e);
extern lv_obj_t * ui_additive_screen_fm_engine_button;
void ui_event_additive_screen_sampler_engine_button(lv_event_t * e);
extern lv_obj_t * ui_additive_screen_sampler_engine_button;
extern lv_obj_t * ui_additive_screen_addictive_engine_button;
void ui_event_additive_screen_subtractive_engine_button(lv_event_t * e);
extern lv_obj_t * ui_additive_screen_subtractive_engine_button;
// SCREEN: ui_subtractive_screen
void ui_subtractive_screen_screen_init(void);
extern lv_obj_t * ui_subtractive_screen;
extern lv_obj_t * ui_subtractive_screen_tab;
extern lv_obj_t * ui_subtractive_screen_engine_page;
void ui_event_subtractive_screen_fm_engine_button(lv_event_t * e);
extern lv_obj_t * ui_subtractive_screen_fm_engine_button;
void ui_event_subtractive_screen_sampler_engine_button(lv_event_t * e);
extern lv_obj_t * ui_subtractive_screen_sampler_engine_button;
void ui_event_subtractive_screen_additive_engine_button(lv_event_t * e);
extern lv_obj_t * ui_subtractive_screen_additive_engine_button;
extern lv_obj_t * ui_subtractive_screen_subtractive_engine_button;
extern lv_obj_t * ui____initial_actions0;




void ui_init(void);

#ifdef __cplusplus
} /*extern "C"*/
#endif

#endif
